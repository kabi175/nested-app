openapi: "3.0.2"
info:
  title: Nested REST APIs
  version: "1.0"
servers:
  - url: https://api.server.test/api/v1
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MinifiedUser'
    put:
      summary: Update an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MinifiedUser'
  /children:
    get:
      summary: Get all children
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Child'
    post:
      summary: Create a new child
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Child'
      responses:
        '201':
          description: Child created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Child'
    put:
      summary: Update an existing child
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Child'
      responses:
        '200':
          description: Child updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Child'

components:
  schemas:
    Child:
      type: object
      properties:
        id:
          type: string
          format: number
        first_name:
          type: string
        last_name:
          type: string
        dob:
          type: string
          format: date
        gender:
          type: string
          enum:
            - male
            - female
            - other
        is_minor_investor:
          type: boolean
        user:
          type: object
          $ref: '#/components/schemas/MinifiedUser'
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    MinifiedUser:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
